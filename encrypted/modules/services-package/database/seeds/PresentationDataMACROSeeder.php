<?php
bolt_decrypt( __FILE__ , 'a3x8sQ'); return 0;
##!!!##